{"version":3,"sources":["App.tsx","components/TabContent/TabContent.tsx","components/TabsPage/TabsPage.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","useLocation","pathname","to","className","TabContent","content","tabs","id","title","TabsPage","useState","setContent","tabId","useParams","useEffect","tabsId","map","tab","includes","toString","currentTab","find","cn","ReactDOM","render","path","element","index","document","getElementById"],"mappings":"kPAWMA,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAC5D,cAAe,CAAE,YAAaD,GADX,EAIRE,EAAM,WAGjB,MAAiB,UAFIC,cAAbC,SAGC,cAAC,IAAD,CAAUC,GAAG,MAIpB,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASD,GAAG,IAAIC,UAAWP,EAA3B,kBAGA,cAAC,IAAD,CAASM,GAAG,QAAQC,UAAWP,EAA/B,yBAON,qBAAKO,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,E,cCzCYC,EAA8B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5C,OACE,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACIE,GAGP,ECPKC,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASH,QAAS,eACxC,CAAEE,GAAI,QAASC,MAAO,QAASH,QAAS,eACxC,CAAEE,GAAI,QAASC,MAAO,QAASH,QAAS,gBAG7BI,EAAW,WACtB,MAA8BC,mBAAS,uBAAvC,mBAAOL,EAAP,KAAgBM,EAAhB,KAEQC,EAAUC,cAAVD,MAgBR,OAdAE,qBAAU,WACR,IAAMC,EAAST,EAAKU,KAAI,SAAAC,GAAG,OAAIA,EAAIV,EAAR,IAEtBK,GAAUG,EAAOG,SAASN,EAAMO,aACnCR,EAAW,uBAGb,IAAMS,EAAad,EAAKe,MAAK,SAAAJ,GAAG,OAAIA,EAAIV,KAAOK,CAAf,IAE5BQ,GACFT,EAAWS,EAAWf,QAEzB,GAAE,CAACO,IAGF,qCACE,oBAAIT,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGG,EAAKU,KAAI,SAAAC,GAAG,OACX,oBACE,UAAQ,MACRd,UAAWmB,IAAG,CAAE,YAAaL,EAAIV,KAAOK,IAF1C,SAIE,cAAC,IAAD,CAAMV,GAAE,aAAQe,EAAIV,IAApB,SAA2BU,EAAIT,SALtB,QAWjB,cAAC,EAAD,CAAYH,QAASA,MAG1B,EC7CDkB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,oBAAIvB,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAOsB,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUC,QAAS,cAAC,EAAD,QAGjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAIvB,UAAU,QAAd,qCAK/ByB,SAASC,eAAe,Q","file":"static/js/main.55f28f30.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Outlet,\n  NavLink,\n  useLocation,\n  Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'is-active': isActive },\n);\n\nexport const App = () => {\n  const { pathname } = useLocation();\n\n  if (pathname === '/home') {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>\n              Home\n            </NavLink>\n            <NavLink to=\"/tabs\" className={getLinkClass}>\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  content: string,\n};\n\nexport const TabContent: React.FC<Props> = ({ content }) => {\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      { content }\n    </div>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { TabContent } from '../TabContent';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const [content, setContent] = useState('Please select a tab');\n\n  const { tabId } = useParams();\n\n  useEffect(() => {\n    const tabsId = tabs.map(tab => tab.id);\n\n    if (!tabId || !tabsId.includes(tabId.toString())) {\n      setContent('Please select a tab');\n    }\n\n    const currentTab = tabs.find(tab => tab.id === tabId);\n\n    if (currentTab) {\n      setContent(currentTab.content);\n    }\n  }, [tabId]);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={cn({ 'is-active': tab.id === tabId })}\n            >\n              <Link to={`../${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <TabContent content={content} />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './components/TabsPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<h1 className=\"title\">Home page</h1>} />\n        <Route path=\"tabs\">\n          <Route path=\":tabId?\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}